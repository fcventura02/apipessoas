{"version":3,"sources":["services/api.js","pages/main/tableRow.js","pages/main/index.js","pages/create/index.js","pages/update/index.js","routes.js","Components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","TableRow","props","delete","bind","this","obj","_id","then","alert","catch","err","console","log","person_name","person_cpf","to","className","onClick","Component","Main","state","person","personInfo","page","loadPerson","a","get","response","data","docs","setState","error","prevPage","pageNumber","nextPage","pages","map","object","i","key","align","style","marginTop","colSpan","tabRow","disabled","Create","onChangePersonName","onChangeCpf","onSubmit","e","target","value","preventDefault","post","res","type","onChange","match","params","id","put","history","push","Routes","exact","path","component","Update","Header","href","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6YAIeA,EAHHC,IAAMC,OAAO,CACrBC,QAAS,8B,OCqCEC,E,YAlCb,WAAaC,GAAO,IAAD,8BACjB,4CAAMA,KACDC,OAAS,EAAKA,OAAOC,KAAZ,gBAFG,E,sEAMjBN,IAAMK,OAAO,iCAAkCE,KAAKH,MAAMI,IAAIC,KAC7DC,KAAKC,MAAM,aACXC,MAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,O,+BAOxB,OACI,4BACE,4BACGN,KAAKH,MAAMI,IAAIQ,aAElB,4BACGT,KAAKH,MAAMI,IAAIS,YAElB,4BACE,kBAAC,IAAD,CAAMC,GAAI,SAASX,KAAKH,MAAMI,IAAIC,IAAKU,UAAU,mBAAjD,SAEF,4BACE,4BAAQC,QAASb,KAAKF,OAAQc,UAAU,kBAAxC,gB,GA5BWE,aCCFC,G,uNACjBC,MAAQ,CACJC,OAAQ,GACRC,WAAW,GACXC,KAAM,G,EAMVC,W,qBAAa,wCAAAC,EAAA,4DAAOF,EAAP,+BAAc,EAAd,SACH3B,EAAI8B,IAAJ,qBAAsBH,IACvBhB,KAAK,SAACoB,GAAa,IAAD,EACeA,EAASC,KAAhCC,EADQ,EACRA,KAASP,EADD,wBAEf,EAAKQ,SAAS,CACVT,OAAQQ,EACRP,aACAC,WAGPd,MAAM,SAAUsB,GACbpB,QAAQC,IAAImB,KAXX,yC,EAsBbC,SAAW,WAAK,IACNT,EAAM,EAAKH,MAAXG,KACN,GAAY,IAATA,EAAH,CACA,IAAMU,EAAaV,EAAO,EAC1B,EAAKC,WAAWS,K,EAEpBC,SAAW,WAAK,IAAD,EACY,EAAKd,MAAtBG,EADK,EACLA,KACN,GAAGA,IAFQ,EACAD,WACYa,MAAvB,CACA,IAAMF,EAAaV,EAAO,EAC1B,EAAKC,WAAWS,K,mFAnChB7B,KAAKoB,e,+BAmBL,OAAOpB,KAAKgB,MAAMC,OAAOe,IAAI,SAASC,EAAQC,GAC1C,OAAO,kBAAC,EAAD,CAAUjC,IAAKgC,EAAQE,IAAKD,Q,+BAkBjC,IAAD,EACoBlC,KAAKgB,MAAvBG,EADF,EACEA,KAAMD,EADR,EACQA,WACb,OACI,yBAAKN,UAAU,eACZ,wBAAIwB,MAAM,UAAV,oBACA,2BAAOxB,UAAY,sBAAsByB,MAAO,CAAEC,UAAW,KACzD,+BACI,4BACI,sCACA,mCACA,wBAAIC,QAAQ,KAAZ,gBAGR,+BACKvC,KAAKwC,WAId,yBAAK5B,UAAU,WACX,4BAAQ6B,SAAmB,IAATtB,EAAYN,QAASb,KAAK4B,UAA5C,YACA,4BAAQa,SAAUtB,IAAQD,EAAWa,MAAOlB,QAASb,KAAK8B,UAA1D,oB,GAjEehB,cCDb4B,G,kBACnB,WAAY7C,GAAQ,IAAD,8BACjB,4CAAMA,KACD8C,mBAAqB,EAAKA,mBAAmB5C,KAAxB,gBAC1B,EAAK6C,YAAc,EAAKA,YAAY7C,KAAjB,gBACnB,EAAK8C,SAAW,EAAKA,SAAS9C,KAAd,gBAEhB,EAAKiB,MAAQ,CACXP,YAAa,GACbC,WAAY,IARG,E,gFAYAoC,GACjB9C,KAAK0B,SAAS,CACZjB,YAAaqC,EAAEC,OAAOC,U,kCAIdF,GACV9C,KAAK0B,SAAS,CACZhB,WAAYoC,EAAEC,OAAOC,U,+BAIhBF,GACPA,EAAEG,iBACF,IAAMhD,EAAI,CACRQ,YAAYT,KAAKgB,MAAMP,YACvBC,WAAWV,KAAKgB,MAAMN,YAExBjB,IAAMyD,KAAK,gCAAiCjD,GAAKE,KAAK,SAAAgD,GAAG,OAAI5C,QAAQC,IAAI2C,EAAI3B,QAC5EnB,MAAME,QAAQC,IAAI,SAGnBR,KAAK0B,SAAS,CACZjB,YAAa,GACbC,WAAY,O,+BASd,OACE,yBAAKE,UAAU,iBACb,wDACA,0BAAMiC,SAAY7C,KAAK6C,UACrB,yBAAKjC,UAAU,cACb,oDACA,2BAAOwC,KAAK,OACVxC,UAAU,eACVoC,MAAOhD,KAAKgB,MAAMP,YAClB4C,SAAUrD,KAAK2C,sBAEnB,yBAAK/B,UAAU,cACb,mDACA,2BAAOwC,KAAK,OACVxC,UAAU,eACVoC,MAAOhD,KAAKgB,MAAMN,WAClB2C,SAAUrD,KAAK4C,eAEnB,yBAAKhC,UAAU,aACb,2BAAOwC,KAAK,SAASJ,MAAM,mBAAmBpC,UAAU,2B,GAjEhCE,cCAf4B,G,kBACnB,WAAY7C,GAAQ,IAAD,8BACjB,4CAAMA,KACD8C,mBAAqB,EAAKA,mBAAmB5C,KAAxB,gBAC1B,EAAK6C,YAAc,EAAKA,YAAY7C,KAAjB,gBACnB,EAAK8C,SAAW,EAAKA,SAAS9C,KAAd,gBAEhB,EAAKiB,MAAQ,CACXP,YAAa,GACbC,WAAY,IARG,E,iFAYC,IAAD,OACjBjB,IAAM6B,IAAI,kCAAoCtB,KAAKH,MAAMyD,MAAMC,OAAOC,IACrErD,KAAK,SAAAoB,GACJ,EAAKG,SAAS,CACZjB,YAAac,EAASC,KAAKf,YAC3BC,WAAYa,EAASC,KAAKd,eAG7BL,MAAM,SAASsB,GACdpB,QAAQC,IAAImB,O,yCAIGmB,GACjB9C,KAAK0B,SAAS,CACZjB,YAAaqC,EAAEC,OAAOC,U,kCAIdF,GACV9C,KAAK0B,SAAS,CACZhB,WAAYoC,EAAEC,OAAOC,U,+BAIhBF,GACPA,EAAEG,iBACF,IAAMhD,EAAI,CACRQ,YAAYT,KAAKgB,MAAMP,YACvBC,WAAWV,KAAKgB,MAAMN,YAExBjB,IAAMgE,IAAI,oCAAsCzD,KAAKH,MAAMyD,MAAMC,OAAOC,GAAIvD,GAAKE,KAAKC,MAAM,sBAC3FC,MAAME,QAAQC,IAAI,SAGnBR,KAAKH,MAAM6D,QAAQC,KAAK,O,+BAQxB,OACE,yBAAK/C,UAAU,iBACb,mDACA,0BAAMiC,SAAY7C,KAAK6C,UACrB,yBAAKjC,UAAU,cACb,oDACA,2BAAOwC,KAAK,OACVxC,UAAU,eACVoC,MAAOhD,KAAKgB,MAAMP,YAClB4C,SAAUrD,KAAK2C,sBAEnB,yBAAK/B,UAAU,cACb,mDACA,2BAAOwC,KAAK,OACVxC,UAAU,eACVoC,MAAOhD,KAAKgB,MAAMN,WAClB2C,SAAUrD,KAAK4C,eAEnB,yBAAKhC,UAAU,aACb,2BAAOwC,KAAK,SAASJ,MAAM,mBAAmBpC,UAAU,2B,GA3EhCE,cCarB8C,EAVA,kBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhD,IACjC,kBAAC,IAAD,CAAO+C,KAAK,UAAUC,UAAWrB,IACjC,kBAAC,IAAD,CAAOoB,KAAK,YAAYC,UAAWC,OCKhCC,G,YAbA,kBACX,4BAAQT,GAAG,eACD,4BACA,4BACI,uBAAGU,KAAK,KAAR,SAEF,wBAAItD,UAAU,YACZ,uBAAGsD,KAAK,WAAR,eCEHC,EAPH,kBACV,yBAAKvD,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGgBwD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjB,MACvB,2DCXNkB,IAASC,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDsHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3E,KAAK,SAAA4E,GACjCA,EAAaC,iB","file":"static/js/main.9ca57850.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:3001/api'\r\n});\r\nexport default api;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass TableRow extends Component {\r\n  constructor (props){\r\n    super(props);\r\n    this.delete = this.delete.bind(this);\r\n  }\r\n\r\n  delete(){\r\n    axios.delete('http://localhost:3001/api/del/'+ this.props.obj._id)\r\n    .then(alert(\"Deletado\"))\r\n    .catch(err=>console.log(err));\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n        <tr>\r\n          <td>\r\n            {this.props.obj.person_name}\r\n          </td>\r\n          <td>\r\n            {this.props.obj.person_cpf}\r\n          </td>\r\n          <td>\r\n            <Link to={\"/edit/\"+this.props.obj._id} className=\"btn btn-primary\">Edit</Link>\r\n          </td>\r\n          <td>\r\n            <button onClick={this.delete} className=\"btn btn-danger\">Delete</button>\r\n          </td>\r\n        </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableRow;","import React, { Component } from 'react';\r\nimport api from '../../services/api';\r\nimport TableRow from './tableRow';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './style.css'\r\nexport default class Main extends Component {\r\n    state = {\r\n        person: [],\r\n        personInfo:{},\r\n        page: 1,\r\n    };\r\n    componentDidMount() {\r\n        this.loadPerson();\r\n    };\r\n\r\n    loadPerson = async (page = 1) => {\r\n        await api.get(`/list?page=${page}`)\r\n            .then((response) =>{\r\n                const {docs, ...personInfo} = response.data\r\n                this.setState({ \r\n                    person: docs,\r\n                    personInfo,\r\n                    page\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    tabRow(){\r\n        return this.state.person.map(function(object, i){\r\n            return <TableRow obj={object} key={i}/>;\r\n        })\r\n    }\r\n\r\n\r\n    prevPage = ()=>{\r\n        const{page}=this.state;\r\n        if(page === 1) return;\r\n        const pageNumber = page - 1;\r\n        this.loadPerson(pageNumber);\r\n    }\r\n    nextPage = ()=>{\r\n        const{page,personInfo}=this.state;\r\n        if(page === personInfo.pages) return;\r\n        const pageNumber = page + 1;\r\n        this.loadPerson(pageNumber);\r\n    }\r\n\r\n    render() {\r\n        const {page, personInfo}=this.state;\r\n        return (\r\n            <div className=\"person-list\">\r\n               <h3 align=\"center\">Lista de Pessoas</h3>\r\n               <table className = \"table table-striped\" style={{ marginTop: 20 }}>\r\n                   <thead>\r\n                       <tr>\r\n                           <th>Pessoa</th>\r\n                           <th>Cpf</th>\r\n                           <th colSpan=\"2\">Ação</th>\r\n                       </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                       {this.tabRow()}\r\n                   </tbody>\r\n               </table>\r\n\r\n               <div className=\"actions\">\r\n                   <button disabled={page === 1} onClick={this.prevPage}>Anterior</button>\r\n                   <button disabled={page=== personInfo.pages} onClick={this.nextPage}>Próximo</button>\r\n               </div>\r\n            </div>\r\n        );\r\n\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport './styles.css';\r\nimport axios from 'axios';\r\n\r\nexport default class Create extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangePersonName = this.onChangePersonName.bind(this);\r\n    this.onChangeCpf = this.onChangeCpf.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      person_name: '',\r\n      person_cpf: '',\r\n    };\r\n  };\r\n\r\n  onChangePersonName(e) {\r\n    this.setState({\r\n      person_name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeCpf(e) {\r\n    this.setState({\r\n      person_cpf: e.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const obj={\r\n      person_name:this.state.person_name,\r\n      person_cpf:this.state.person_cpf\r\n    };\r\n    axios.post('http://localhost:3001/api/add' ,obj).then(res => console.log(res.data))\r\n    .catch(console.log('erro'));\r\n\r\n\r\n    this.setState({\r\n      person_name: '',\r\n      person_cpf: ''\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className='create-person'>\r\n        <h3>Adicione uma nova pessoa</h3>\r\n        <form onSubmit = {this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Adicionar Nome*: </label>\r\n            <input type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.person_name}\r\n              onChange={this.onChangePersonName} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Adicionar Cpf*: </label>\r\n            <input type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.person_cpf}\r\n              onChange={this.onChangeCpf} />\r\n          </div>\r\n          <div className=\"form-goup\">\r\n            <input type=\"submit\" value=\"Registrar Pessoa\" className=\"btn btn-primary\"/>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './styles.css';\r\nimport axios from 'axios';\r\n\r\nexport default class Create extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangePersonName = this.onChangePersonName.bind(this);\r\n    this.onChangeCpf = this.onChangeCpf.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      person_name: '',\r\n      person_cpf: '',\r\n    };\r\n  };\r\n\r\n  componentDidMount(){\r\n    axios.get('http://localhost:3001/api/edit/' + this.props.match.params.id)\r\n    .then(response => {\r\n      this.setState({\r\n        person_name: response.data.person_name,\r\n        person_cpf: response.data.person_cpf\r\n      });\r\n    })\r\n    .catch(function(error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  onChangePersonName(e) {\r\n    this.setState({\r\n      person_name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeCpf(e) {\r\n    this.setState({\r\n      person_cpf: e.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const obj={\r\n      person_name:this.state.person_name,\r\n      person_cpf:this.state.person_cpf\r\n    };\r\n    axios.put('http://localhost:3001/api/update/' + this.props.match.params.id, obj).then(alert('Pessoa atualizada'))\r\n    .catch(console.log('erro'));\r\n\r\n\r\n    this.props.history.push('/');\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className='create-person'>\r\n        <h3>Atualize uma pessoa</h3>\r\n        <form onSubmit = {this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Adicionar Nome*: </label>\r\n            <input type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.person_name}\r\n              onChange={this.onChangePersonName} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Adicionar Cpf*: </label>\r\n            <input type=\"text\"\r\n              className=\"form-control\"\r\n              value={this.state.person_cpf}\r\n              onChange={this.onChangeCpf} />\r\n          </div>\r\n          <div className=\"form-goup\">\r\n            <input type=\"submit\" value=\"Registrar Pessoa\" className=\"btn btn-primary\"/>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport Main from './pages/main';\r\nimport Create from './pages/create';\r\nimport Update from './pages/update';\r\n\r\n\r\nconst Routes = ()=>(\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Main}/>\r\n            <Route path=\"/create\" component={Create}/>\r\n            <Route path=\"/edit/:id\" component={Update}/>\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;","import React from 'react';\r\nimport './styles.css';\r\n\r\n\r\nconst Header = () =>(\r\n    <header id=\"main-header\">\r\n              <ul>\r\n              <li>\r\n                  <a href='/'>Home</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a href='/create'>Create</a>\r\n                </li>\r\n              </ul>\r\n      </header>\r\n);\r\n\r\nexport default Header;","import React from 'react';\nimport Routes from \"./routes\";\nimport './styles.css';\nimport Header from './Components/Header';\n \n\nconst App = () => (\n  <div className=\"App\">\n    <Header/>\n    <Routes />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}